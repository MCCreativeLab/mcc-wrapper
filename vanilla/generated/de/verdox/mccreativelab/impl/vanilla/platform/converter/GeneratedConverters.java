package de.verdox.mccreativelab.impl.vanilla.platform.converter;
import de.verdox.mccreativelab.wrapper.item.components.MCCMapId;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSCustomModelData;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSRepairable;
import de.verdox.mccreativelab.wrapper.item.components.MCCRepairable;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSBlockItemStateProperties;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSChargedProjectiles;
import de.verdox.mccreativelab.wrapper.item.components.MCCItemAttributeModifiers;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSMapItemColor;
import de.verdox.mccreativelab.wrapper.item.components.MCCEnchantable;
import de.verdox.mccreativelab.wrapper.item.components.MCCLodestoneTracker;
import de.verdox.mccreativelab.wrapper.item.components.MCCBlockItemStateProperties;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSEnchantable;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSDyedItemColor;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSLodestoneTracker;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSJukeboxPlayable;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSUseCooldown;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSUnbreakable;
import de.verdox.mccreativelab.wrapper.item.components.MCCUseRemainder;
import de.verdox.mccreativelab.wrapper.item.components.MCCJukeboxPlayable;
import de.verdox.mccreativelab.wrapper.item.components.MCCDyedItemColor;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSItemLore;
import de.verdox.mccreativelab.wrapper.item.components.MCCItemLore;
import de.verdox.mccreativelab.wrapper.item.components.MCCTool;
import de.verdox.mccreativelab.wrapper.item.components.MCCUnbreakable;
import de.verdox.mccreativelab.conversion.ConversionService;
import de.verdox.mccreativelab.wrapper.item.components.MCCDataComponentType;
import de.verdox.mccreativelab.wrapper.item.components.MCCFoodProperties;
import de.verdox.mccreativelab.wrapper.item.components.MCCUseCooldown;
import de.verdox.mccreativelab.wrapper.item.components.MCCSeededContainerLoot;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSSuspiciousStewEffects;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSTool;
import de.verdox.mccreativelab.wrapper.item.components.MCCSuspiciousStewEffects;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSMapId;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSFoodProperties;
import de.verdox.mccreativelab.wrapper.item.components.MCCMapItemColor;
import de.verdox.mccreativelab.impl.vanilla.wrapper.item.components.NMSUseRemainder;
import de.verdox.mccreativelab.wrapper.item.components.MCCChargedProjectiles;
import de.verdox.mccreativelab.wrapper.item.components.MCCCustomModelData;
import de.verdox.mccreativelab.wrapper.item.components.MCCDeathProtection;
public class GeneratedConverters  {
	public static void init(ConversionService conversionService){
		conversionService.registerConverterForNewImplType(MCCDyedItemColor.class, NMSDyedItemColor.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCTool.class, NMSTool.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCUnbreakable.class, NMSUnbreakable.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCMapId.class, NMSMapId.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCRepairable.class, NMSRepairable.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCCustomModelData.class, NMSCustomModelData.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCLodestoneTracker.class, NMSLodestoneTracker.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCTool.Rule.class, NMSTool.NMSRule.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCUseRemainder.class, NMSUseRemainder.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCJukeboxPlayable.class, NMSJukeboxPlayable.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCSuspiciousStewEffects.class, NMSSuspiciousStewEffects.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCEnchantable.class, NMSEnchantable.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCMapItemColor.class, NMSMapItemColor.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCUseRemainder.OnExtraCreatedRemainder.class, NMSUseRemainder.NMSOnExtraCreatedRemainder.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCItemLore.class, NMSItemLore.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCSuspiciousStewEffects.Entry.class, NMSSuspiciousStewEffects.NMSEntry.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCFoodProperties.Builder.class, NMSFoodProperties.NMSBuilder.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCUseCooldown.class, NMSUseCooldown.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCBlockItemStateProperties.class, NMSBlockItemStateProperties.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCChargedProjectiles.class, NMSChargedProjectiles.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCFoodProperties.class, NMSFoodProperties.CONVERTER);
		conversionService.registerConverterForNewImplType(MCCDataComponentType.class, new DataComponentTypeConverter());
	}
}