package de.verdox.mccreativelab.impl.vanilla.pack;

import de.verdox.mccreativelab.generator.AssetPath;
import de.verdox.mccreativelab.generator.ResourcePackFileHoster;
import de.verdox.mccreativelab.generator.resourcepack.CustomResourcePack;
import de.verdox.mccreativelab.impl.vanilla.platform.NMSPlatform;
import de.verdox.mccreativelab.platform.GeneratorPlatformHelper;
import de.verdox.mccreativelab.platform.PlatformResourcePack;

import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;

public class ResourcePackManager {
    private static final Logger LOGGER = Logger.getLogger(ResourcePackManager.class.getSimpleName());

    private CustomResourcePack customResourcePack;
    private GeneratorPlatformHelper helper;
    private ResourcePackFileHoster resourcePackFileHoster;

    public void init(NMSPlatform nmsPlatform) throws IOException {
        File templateFolder = new File("/ressourcePack/template/");
        File fileStorage = new File("/ressourcePack/settings/");
        File hostStorage = new File("/ressourcePack/host/");

        boolean setupComplete = true;
        if(!templateFolder.mkdirs() && !templateFolder.isDirectory()) {
            LOGGER.log(Level.SEVERE, "The template folder could not be created");
            setupComplete = false;
        }
        if(!fileStorage.mkdirs() && !fileStorage.isDirectory()) {
            LOGGER.log(Level.SEVERE, "The settings folder could not be created");
            setupComplete = false;
        }
        if(!hostStorage.mkdirs() && !hostStorage.isDirectory()) {
            LOGGER.log(Level.SEVERE, "The pack host folder could not be created");
            setupComplete = false;
        }

        if(!setupComplete) {
            LOGGER.log(Level.SEVERE, "Could not initialize correctly... Shutting down platform");
            nmsPlatform.shutdown();
            return;
        }

        this.customResourcePack = new CustomResourcePack("mcc", 18, "Generated by MCCreativeLab", AssetPath.buildPath("resourcePacks"), templateFolder, fileStorage);
        this.helper = nmsPlatform.constructPackGeneratorHelper(customResourcePack);
        this.resourcePackFileHoster = new ResourcePackFileHoster(hostStorage);
        PlatformResourcePack.INSTANCE.setup(this.customResourcePack, rp -> {});
    }

    public void buildPack() {
        try {
            customResourcePack.installPack(false);
            resourcePackFileHoster.createResourcePackZipFiles();
        } catch (IOException e) {
            throw new RuntimeException(e);
        }
    }

    public CustomResourcePack getResourcePack() {
        return customResourcePack;
    }

    public GeneratorPlatformHelper getHelper() {
        return helper;
    }

    public ResourcePackFileHoster getResourcePackFileHoster() {
        return resourcePackFileHoster;
    }
}
